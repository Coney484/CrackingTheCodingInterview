Return Kth last elemnt of a Linked List

Method 1: Recursive

Node* kthLastNode(Node* head, int k , int &i){
	if(head == NULL)
		return 0;
	Node* n = kthLastNode(head->next, k, i);
	i = i+1;
	if(i == k)
		return head;
	return n;
}

Node* kthLastNode(Node* head, int k){
	int i =0;
	return kthLastNode(head, k, i);
}

Space Complexity: O(N)
Time Complexity: O(N)

Method 2: Iterative
Create two pointers
Send a pointer k positions ahead
Now iterate both the pointers till the second pointer reaches last pointer
the first pointer will be at the kth last position

Node* kthLastNode(Node* head, int k){
	Node* p1=head, p2 =head;
	for(int i=0; i<k; i++){
		p2 = p2->next;
	}
	while(p2){
		p1 = p1->next;
		p2 = p2->next;
	}

	return p2;
}